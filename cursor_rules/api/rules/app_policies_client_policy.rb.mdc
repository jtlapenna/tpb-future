---
description: Documentation for the ClientPolicy class in the application policies.
globs: ['app/policies/client_policy.rb']
alwaysApply: false
---

# ClientPolicy Documentation

## Overview
The `ClientPolicy` class is a part of the application's authorization framework, inheriting from `ApplicationPolicy`. It defines the rules for accessing client-related resources, specifically focusing on the permissions for showing client details and the attributes that can be permitted for mass assignment.

## Key Components

### Class: `ClientPolicy`
- **Inherits from**: `ApplicationPolicy`

#### Method: `show?`
- **Purpose**: Determines if a user is allowed to view client details.
- **Implementation**: Returns the `user` object, which implies that if a user is present, they are authorized to view the client.

#### Method: `permitted_attributes`
- **Purpose**: Specifies which attributes of the client can be mass-assigned.
- **Returns**: An array containing `:name`, indicating that only the name attribute is permitted for assignment.

## Dependencies
This file does not import any other files and is not imported by any other files in the repository. It operates independently within the authorization context of the application.

## Usage Examples
To use the `ClientPolicy`, you would typically instantiate it within a controller or service that handles client-related actions. For example:
```ruby
policy = ClientPolicy.new(user, client)
if policy.show?
  # Logic to display client details
end
```

## Best Practices
- Ensure that the `user` method is properly defined in the `ApplicationPolicy` to avoid unexpected behavior.
- Regularly review the permitted attributes to ensure they align with the application's security requirements.
- Consider extending the policy with additional methods as needed to handle more complex authorization scenarios.