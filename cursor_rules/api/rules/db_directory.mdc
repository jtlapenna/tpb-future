---
description: Documentation for the db directory containing database schema and seed data.
globs: ['db/*']
alwaysApply: false
---

# Database Directory Documentation

## Overview
The `db` directory is a crucial part of the codebase that manages the database schema and seed data for the application. It serves as the foundation for the database structure and initial data population, ensuring that the application has the necessary data to function correctly.

## Key Files
- **schema.rb**: This file contains the database schema definition, which outlines the structure of the database, including tables, columns, and their data types. It is generated by the database migration system and reflects the current state of the database.
- **seeds.rb**: This file is used to populate the database with initial data. It contains Ruby code that creates records in the database, which can be useful for development and testing purposes.

## Relation to Other Parts of the Codebase
The `db` directory is closely related to the models and migrations in the application. Models interact with the database schema defined in `schema.rb`, while migrations are used to modify the database structure over time. The data populated by `seeds.rb` can be accessed by the application through these models, allowing for a seamless integration of data and functionality.

## Common Patterns and Conventions
- **Schema Management**: The `schema.rb` file should be kept up-to-date with any changes made through migrations. Developers should run migrations regularly to ensure that the schema reflects the latest changes.
- **Seeding Data**: When adding new seed data, developers should ensure that it does not conflict with existing records. It is a good practice to check for existing records before creating new ones to avoid duplicates.

## Best Practices
- Regularly review and update the `schema.rb` file after making changes to the database structure through migrations.
- Use the `seeds.rb` file to create meaningful initial data that can help in testing and development. Consider using environment checks to load different seed data for development and production environments.
- Keep the `db` directory organized and document any significant changes to the schema or seed data to maintain clarity for future developers.