---
description: Documentation for the Shopify Webhooks Base class.
globs: ['app/parsers/webhooks/shopify/base.rb']
alwaysApply: false
---

# Webhooks::Shopify::Base Documentation

## Overview
The `Webhooks::Shopify::Base` class serves as a foundational component for handling Shopify webhook events. It encapsulates the store and payload data necessary for processing incoming webhook requests from Shopify.

## Key Components
- **Class**: `Webhooks::Shopify::Base`
  - **Attributes**:
    - `store`: An instance variable that holds the store information associated with the webhook.
    - `payload`: An instance variable that contains the data payload received from the Shopify webhook.
  - **Constructor**: `initialize(store, payload)`
    - Initializes a new instance of the class with the specified `store` and `payload`.

## Dependencies
This file does not import any other files in the repository and is not imported by any other files. It stands alone as a basic structure for handling Shopify webhooks.

## Usage Example
To create an instance of the `Webhooks::Shopify::Base` class, you would do the following:
```ruby
store = Store.find(store_id)  # Assuming Store is a model that retrieves store information
payload = { "id": 123, "name": "Test Product" }  # Example payload from Shopify
webhook = Webhooks::Shopify::Base.new(store, payload)
```

## Best Practices
- Ensure that the `store` and `payload` passed to the constructor are valid and properly formatted to avoid errors during processing.
- Consider extending this base class to implement specific webhook handling logic for different types of Shopify events (e.g., order creation, product updates).
- Keep the class lightweight and focused on its primary responsibility to maintain clarity and ease of use.