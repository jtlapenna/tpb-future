---
description: Serializer for minimal store product representation in the application.
globs: ['app/serializers/store_product_minimal_serializer.rb']
alwaysApply: false
---

# StoreProductMinimalSerializer

## Overview
The `StoreProductMinimalSerializer` is a serializer class that defines how a minimal representation of a store product is structured when converted to JSON. It is part of the ActiveModel::Serializer framework, which is used to create JSON representations of Ruby objects in a Rails application.

## Key Components
- **Attributes**: The serializer specifies the following attributes to be included in the JSON output:
  - `id`: The unique identifier for the store product.
  - `name`: The name of the store product.
  - `sku`: The stock keeping unit identifier for the product.
  - `stock`: The available stock quantity of the product.
  - `status`: The current status of the product (e.g., available, out of stock).

- **Associations**: The serializer also defines several associations that link to other models:
  - `belongs_to :brand`: Links to the `BrandMinimalSerializer`, which provides a minimal representation of the brand associated with the product.
  - `belongs_to :product_variant`: Links to the `ProductVariantMinimalSerializer`, which provides details about the product variant.
  - `belongs_to :store_category`: Links to the `StoreCategoryMinimalSerializer`, which provides information about the category of the store.
  - `belongs_to :thumb_image`: Represents the thumbnail image associated with the product.
  - `has_one :store`: Links to the `StoreMinimalSerializer`, which provides a minimal representation of the store that sells the product.

## Dependencies
This file does not import any other files and is not imported by any other files in the repository. It operates independently, relying solely on the ActiveModel::Serializer framework and the defined associations.

## Usage Examples
To use this serializer, you would typically call it within a controller action that responds with JSON. For example:
```ruby
render json: @store_product, serializer: StoreProductMinimalSerializer
```

## Best Practices
- Ensure that the attributes defined in the serializer are relevant and necessary for the client consuming the API. Avoid over-fetching data.
- Keep the serializer focused on minimal data representation to improve performance and reduce payload size.
- Regularly review and update the serializer as the underlying models or business requirements change.