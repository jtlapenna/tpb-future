---
description: Documentation for the Webhooks::Blaze::Base class in the app/parsers/webhooks/blaze/base.rb file.
globs: ['app/parsers/webhooks/blaze/base.rb']
alwaysApply: false
---

# Webhooks::Blaze::Base Documentation

## Overview
The `Webhooks::Blaze::Base` class serves as a foundational component for handling webhooks related to the Blaze service. It encapsulates the necessary data and provides a structure for further development and integration with the webhook processing logic.

## Key Components
- **Class**: `Webhooks::Blaze::Base`
  - **Attributes**:
    - `store`: An instance variable that holds the store object, which is likely responsible for persisting or managing data related to the webhook.
    - `payload`: An instance variable that contains the data received from the webhook, allowing for further processing.
  - **Method**:
    - `initialize(store, payload)`: The constructor method that initializes the `store` and `payload` attributes with the provided arguments. This method is essential for creating an instance of the `Webhooks::Blaze::Base` class with the necessary context.

## Dependencies
This file does not import any other files in the repository, nor is it imported by any other files. It stands alone as a simple class definition, which may be extended or utilized in other parts of the codebase as needed.

## Usage Example
To create an instance of the `Webhooks::Blaze::Base` class, you would do the following:
```ruby
store = SomeStoreClass.new
payload = { key: 'value' }
webhook = Webhooks::Blaze::Base.new(store, payload)
```

## Best Practices
- Ensure that the `store` object passed to the constructor is properly initialized and capable of handling the operations required for the webhook processing.
- Validate the `payload` data structure before using it to avoid runtime errors.
- Consider extending this class with additional methods for processing the webhook data as needed, while keeping the single responsibility principle in mind.