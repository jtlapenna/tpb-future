---
description: Policy class for managing permissions related to attribute groups.
globs: ['app/policies/attribute_group_policy.rb']
alwaysApply: false
---

# AttributeGroupPolicy Documentation

## Overview
The `AttributeGroupPolicy` class is a policy that defines the authorization rules for managing attribute groups within the application. It inherits from `ApplicationPolicy`, which provides a base structure for all policy classes in the codebase.

## Key Components
- **Class**: `AttributeGroupPolicy`
  - This class is responsible for defining the permissions related to attribute groups.

- **Method**: `index?`
  - **Purpose**: This method checks if the user is authorized to view the list of attribute groups.
  - **Returns**: `true` if a user is present (logged in), otherwise `false`.

- **Method**: `permitted_attributes`
  - **Purpose**: This method returns an array of attributes that are permitted for mass assignment when creating or updating attribute groups.
  - **Returns**: An array containing the symbols `:name`, `:group_type`, and `:order`.

## Dependencies
This file does not import any other files and is not imported by any other files in the repository. It stands alone as a policy class, relying on the base functionality provided by `ApplicationPolicy`.

## Usage Examples
To check if a user can access the index of attribute groups:
```ruby
policy = AttributeGroupPolicy.new(user)
if policy.index?
  # User is authorized to view attribute groups
end
```

To get the permitted attributes for mass assignment:
```ruby
permitted_attrs = AttributeGroupPolicy.new(user).permitted_attributes
# permitted_attrs will be [:name, :group_type, :order]
```

## Best Practices
- Ensure that the `user` object is always passed correctly to the policy methods to avoid unexpected authorization failures.
- When adding new attributes to the attribute groups, remember to update the `permitted_attributes` method accordingly to maintain security and integrity of the data.
- Keep the policy methods simple and focused on a single responsibility to enhance readability and maintainability.